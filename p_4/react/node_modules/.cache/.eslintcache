[{"D:\\studi\\ofer\\p_4\\react\\src\\index.js":"1","D:\\studi\\ofer\\p_4\\react\\src\\App.js":"2","D:\\studi\\ofer\\p_4\\react\\src\\reportWebVitals.js":"3","D:\\studi\\ofer\\p_4\\react\\src\\marketComps\\appMarket.js":"4","D:\\studi\\ofer\\p_4\\react\\src\\marketComps\\home.js":"5","D:\\studi\\ofer\\p_4\\react\\src\\marketComps\\admin\\appAdmin.js":"6","D:\\studi\\ofer\\p_4\\react\\src\\marketComps\\admin\\login.js":"7","D:\\studi\\ofer\\p_4\\react\\src\\marketComps\\admin\\listProdAdmin.js":"8","D:\\studi\\ofer\\p_4\\react\\src\\marketComps\\admin\\headerAdmin.js":"9","D:\\studi\\ofer\\p_4\\react\\src\\marketComps\\admin\\authAdmin.js":"10","D:\\studi\\ofer\\p_4\\react\\src\\marketComps\\admin\\categoryList.js":"11","D:\\studi\\ofer\\p_4\\react\\src\\marketComps\\admin\\usersList.js":"12","D:\\studi\\ofer\\p_4\\react\\src\\services\\apiSer.js":"13","D:\\studi\\ofer\\p_4\\react\\src\\marketComps\\admin\\add\\addProd.js":"14","D:\\studi\\ofer\\p_4\\react\\src\\marketComps\\admin\\add\\addUser.js":"15","D:\\studi\\ofer\\p_4\\react\\src\\marketComps\\admin\\add\\addCat.js":"16","D:\\studi\\ofer\\p_4\\react\\src\\marketComps\\admin\\edit\\edittUser.js":"17","D:\\studi\\ofer\\p_4\\react\\src\\marketComps\\admin\\edit\\editProd.js":"18","D:\\studi\\ofer\\p_4\\react\\src\\marketComps\\admin\\edit\\editCat.js":"19"},{"size":517,"mtime":1618246173181,"results":"20","hashOfConfig":"21"},{"size":246,"mtime":1618246173149,"results":"22","hashOfConfig":"21"},{"size":362,"mtime":1618246173217,"results":"23","hashOfConfig":"21"},{"size":542,"mtime":1618246173238,"results":"24","hashOfConfig":"21"},{"size":120,"mtime":1618246173247,"results":"25","hashOfConfig":"21"},{"size":2184,"mtime":1618258276276,"results":"26","hashOfConfig":"21"},{"size":2957,"mtime":1618246173347,"results":"27","hashOfConfig":"21"},{"size":2097,"mtime":1618255532960,"results":"28","hashOfConfig":"21"},{"size":956,"mtime":1618246173330,"results":"29","hashOfConfig":"21"},{"size":855,"mtime":1618254703414,"results":"30","hashOfConfig":"21"},{"size":1952,"mtime":1618258302286,"results":"31","hashOfConfig":"21"},{"size":2116,"mtime":1618254786710,"results":"32","hashOfConfig":"21"},{"size":842,"mtime":1618260653745,"results":"33","hashOfConfig":"21"},{"size":4361,"mtime":1618255056955,"results":"34","hashOfConfig":"21"},{"size":3474,"mtime":1618255058085,"results":"35","hashOfConfig":"21"},{"size":2352,"mtime":1618255054463,"results":"36","hashOfConfig":"21"},{"size":2646,"mtime":1618260474575,"results":"37","hashOfConfig":"21"},{"size":4152,"mtime":1618256928775,"results":"38","hashOfConfig":"21"},{"size":2292,"mtime":1618258451268,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1ppyoeg",{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"42"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"42"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"42"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"42"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"42"},"D:\\studi\\ofer\\p_4\\react\\src\\index.js",[],["90","91"],"D:\\studi\\ofer\\p_4\\react\\src\\App.js",["92"],"import logo from './logo.svg';\r\nimport './App.css';\r\nimport AppMarket from './marketComps/appMarket';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <AppMarket />\r\n\r\n     \r\n    </div>\r\n  );\r\n}\r\n// 10:50\r\nexport default App;\r\n","D:\\studi\\ofer\\p_4\\react\\src\\reportWebVitals.js",[],"D:\\studi\\ofer\\p_4\\react\\src\\marketComps\\appMarket.js",[],"D:\\studi\\ofer\\p_4\\react\\src\\marketComps\\home.js",[],"D:\\studi\\ofer\\p_4\\react\\src\\marketComps\\admin\\appAdmin.js",["93"],"import React from 'react';\r\nimport { BrowserRouter as Router, Switch, Route , Link } from 'react-router-dom';\r\nimport Login from './login';\r\nimport ListProdAdmin from \"./listProdAdmin\";\r\nimport HeaderAdmin from './headerAdmin';\r\nimport AuthAdmin from \"./authAdmin\"\r\nimport AddProd from './add/addProd';\r\nimport CategoryList from './categoryList';\r\nimport AddCat from './add/addCat';\r\nimport UserList from './usersList';\r\nimport EditUser from './edit/edittUser';\r\nimport AddUser from './add/addUser';\r\nimport EditProd from './edit/editProd';\r\nimport Editcat from './edit/editCat';\r\n\r\nfunction AppAdmin(props) {\r\n  return (\r\n    <React.Fragment>\r\n      {/* סטריקט דואג שאנחנו באדמין ויו אר אל פנימי שלו */}\r\n      <Route strict path={`/admin/`} component={AuthAdmin} />\r\n      <HeaderAdmin />\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n          <nav className=\"col-2 bg-info\" style={{ minHeight: \"100vh\" }}>\r\n            <Link className=\"d-block\" to=\"/admin/list\">Products</Link>\r\n            <Link  className=\"d-block\" to=\"/admin/category\">Category</Link>\r\n            <Link  className=\"d-block\" to=\"/admin/users\">Users</Link>\r\n          </nav>\r\n          <div className=\"col-9\">\r\n            <Switch>\r\n              <Route exact path={`/admin`} component={Login} />\r\n              <Route exact path={`/admin/list`} component={ListProdAdmin} />\r\n              <Route exact path={`/admin/addProd`} component={AddProd} />\r\n              <Route exact path={`/admin/category`} component={CategoryList} />\r\n              <Route exact path={`/admin/addCategory`} component={AddCat} />\r\n              <Route exact path={`/admin/users`} component={UserList} />\r\n              <Route exact path={`/admin/addUser`} component={AddUser} />\r\n              <Route exact path={`/admin/users/editUser/:editId`} component={EditUser} />\r\n              <Route exact path={`/admin/EditProd/:editId`} component={EditProd} />\r\n              <Route exact path={`/admin/EditCat/:editId`} component={Editcat} />\r\n            </Switch>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default AppAdmin","D:\\studi\\ofer\\p_4\\react\\src\\marketComps\\admin\\login.js",[],"D:\\studi\\ofer\\p_4\\react\\src\\marketComps\\admin\\listProdAdmin.js",["94"],"import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { doApiGet, doApiMethod, URL_API } from '../../services/apiSer';\r\n\r\nfunction ListProdAdmin(props) {\r\n  let [prods_ar, setProdsAr] = useState([]);\r\n\r\n  useEffect(() => {\r\n    doApi();\r\n  }, [])\r\n\r\n  const doApi = async () => {\r\n    let url = URL_API + \"/prods?sort=_id&reverse=yes\";\r\n    let data = await doApiGet(url);\r\n    setProdsAr(data);\r\n  }\r\n\r\n  const delProd = async(_id) => {\r\n    if(window.confirm(\"are you sure you want to delete?\")){\r\n      let url = URL_API + \"/prods/\"+_id;\r\n      let data = await doApiMethod(url,\"DELETE\",{});\r\n      if(data.n == 1){\r\n        //refresh the table\r\n        doApi();\r\n      }\r\n      else{\r\n        alert(\"there problem\")\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>List of Prod in shop:</h1>\r\n      <Link to=\"/admin/addProd\">add new prod</Link>\r\n     \r\n\r\n      <table className=\"table table-striped\">\r\n        {/* TODO: mouseover will shoe info of prod */}\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>name</th>\r\n            <th>category</th>\r\n            <th>price</th>\r\n            <th>qty</th>\r\n            <th>user</th>\r\n            <th>del/edit</th>\r\n          </tr>\r\n        </thead>\r\n        {/* TODO: add pagenation */}\r\n        <tbody>\r\n\r\n          {prods_ar.map((item,i) => {\r\n            return (\r\n              <tr key={item._id}>\r\n                <td>{i+1}</td>\r\n                <td>{item.name}</td>\r\n                <td>{item.category_s_id}</td>\r\n                <td>{item.price}</td>\r\n                <td>{item.qty}</td>\r\n                <td>{item.user_id}</td>\r\n                <td>\r\n                  <button onClick={() => {\r\n                    delProd(item._id);\r\n                  }} className=\"btn btn-danger\">del</button>\r\n                  <Link to={\"/admin/EditProd/\"+ item._id} className=\"btn btn-dark ms-2\">edit</Link>\r\n                </td>\r\n              </tr>\r\n            )\r\n          })}\r\n\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ListProdAdmin;","D:\\studi\\ofer\\p_4\\react\\src\\marketComps\\admin\\headerAdmin.js",[],"D:\\studi\\ofer\\p_4\\react\\src\\marketComps\\admin\\authAdmin.js",["95","96"],"import React, { useEffect } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport { doApiMethod, URL_API } from '../../services/apiSer';\r\n\r\nfunction AuthAdmin(props){\r\n  let history = useHistory()\r\n\r\n  useEffect(()=> {\r\n    console.log(\"auth log\")\r\n    // check if there token\r\n    //TODO: check if already in /admin\r\n    if(!localStorage[\"tok\"]){\r\n      history.push(\"/admin\");\r\n    }\r\n    else{\r\n      doApi();\r\n    }\r\n  },[props.match])\r\n\r\n  const doApi = async() => {\r\n    let url = URL_API+\"/users/checkAdmin\";\r\n    let data = await doApiMethod(url,\"POST\",{});\r\n    // check if the token is valid and the user is admin\r\n    if(data.auth != \"success\"){\r\n      localStorage.removeItem(\"tok\");\r\n      history.push(\"/admin\");\r\n// 13:10\r\n    }\r\n  }\r\n\r\n  return(\r\n    <React.Fragment>\r\n    </React.Fragment> \r\n  )\r\n}\r\n\r\nexport default AuthAdmin","D:\\studi\\ofer\\p_4\\react\\src\\marketComps\\admin\\categoryList.js",["97"],"import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { doApiGet, doApiMethod, URL_API } from '../../services/apiSer';\r\n\r\nfunction CategoryList(props) {\r\n  let [cat_ar, setcatAr] = useState([]);\r\n\r\n  useEffect(() => {\r\n    doApi();\r\n  }, [])\r\n\r\n  const doApi = async () => {\r\n    let url = URL_API + \"/categories\";\r\n    let data = await doApiGet(url);\r\n    setcatAr(data);\r\n  }\r\n\r\n  const delProd = async(_id) => {\r\n    if(window.confirm(\"are you sure you want to delete?\")){\r\n      let url = URL_API + \"/categories/\"+_id;\r\n      let data = await doApiMethod(url,\"DELETE\",{});\r\n      if(data.n == 1){\r\n        //refresh the table\r\n        doApi();\r\n      }\r\n      else{\r\n        alert(\"there problem\")\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>List of Prod in shop:</h1>\r\n      <Link to=\"/admin/addCategory\">add new Categoty</Link>\r\n      <table className=\"table table-striped\">\r\n        {/* TODO: mouseover will shoe info of prod */}\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>name</th>\r\n            <th>info</th>\r\n            <th>Short id</th>\r\n            <th>del/edit</th>\r\n          </tr>\r\n        </thead>\r\n        {/* TODO: add pagenation */}\r\n        <tbody>\r\n\r\n          {cat_ar.map((item,i) => {\r\n            return (\r\n              <tr key={item._id}>\r\n                <td>{i+1}</td>\r\n                <td>{item.name}</td>\r\n                <td>{item.info}</td>\r\n                <td>{item.s_id}</td>\r\n                <td>\r\n                  <button onClick={() => {\r\n                    delProd(item._id);\r\n                  }} className=\"btn btn-danger\">del</button>\r\n                \r\n                  <Link to={\"/admin/EditCat/\"+ item._id} className=\"btn btn-dark ms-2\">edit</Link>\r\n\r\n                </td>\r\n              </tr>\r\n            )\r\n          })}\r\n\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CategoryList;","D:\\studi\\ofer\\p_4\\react\\src\\marketComps\\admin\\usersList.js",[],"D:\\studi\\ofer\\p_4\\react\\src\\services\\apiSer.js",[],"D:\\studi\\ofer\\p_4\\react\\src\\marketComps\\admin\\add\\addProd.js",["98","99"],"import React, { useEffect, useRef, useState } from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport {  doApiGet,doApiMethod, URL_API } from '../../../services/apiSer'\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nfunction AddProd(props) {\r\n  let [cat_ar,setCatAr] = useState([])\r\n\r\n\r\n  let history = useHistory()\r\n  const { register, handleSubmit, errors } = useForm();\r\n\r\n\r\n  \r\n\r\n  let nameRef = register({ required: true, minLength: 3 });\r\n  let infoRef = register({ required: true, minLength: 3 });\r\n  let priceRef = register({ required: true, min: 1 });\r\n  let imageRef = register({});\r\n  let qtyRef = register({ required: true, min: 1 });\r\n  let commentsRef = register({ minLength: 1 });\r\n  let catRef = register({ required: true });\r\n  \r\n  useEffect(() => {\r\n    doApiGetCat();\r\n  },[])\r\n\r\n  const doApiGetCat = async() => {\r\n    let url = URL_API + \"/categories\" \r\n    let data = await doApiGet(url);\r\n    setCatAr(data);\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  const onFormSub = (dataBody) => {\r\n    console.log(dataBody);\r\n    \r\n    // doApi(dataBody)\r\n    doApi(dataBody);\r\n  }\r\n\r\n  const doApi = async(dataBody) => {\r\n    let url = URL_API + \"/prods\";\r\n    let data = await doApiMethod(url,\"POST\",dataBody);\r\n    // if succed we will get _id prop\r\n    // console.log(data);\r\n    if(data._id){\r\n      alert(\"prod added\");\r\n      history.push(\"/admin/list\");\r\n    }\r\n    else{\r\n      alert(\"There is problem try again later\");\r\n    }\r\n  }\r\n\r\n  // 15:02\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <form onSubmit={handleSubmit(onFormSub)} className=\"col-lg-6 mx-auto p-2 shadow mt-3\">\r\n        <h1>Add new Product</h1>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"name\" className=\"form-label\">name</label>\r\n          <input defaultValue=\"pizza\" ref={nameRef} name=\"name\" type=\"text\" className=\"form-control\" id=\"name\" />\r\n          {errors.name && <span className=\"text-danger\">Enter vaild name (at least 2 charts)</span>}\r\n        </div>\r\n\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"info\" className=\"form-label\">info</label>\r\n          <input defaultValue=\"bla bla\" ref={infoRef} name=\"info\" type=\"text\" className=\"form-control\" id=\"info\" />\r\n          {errors.info && <span className=\"text-danger\">Enter info (at least 2 charts)</span>}\r\n        </div>\r\n\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"price\" className=\"form-label\">Price:</label>\r\n          <input defaultValue=\"5\" ref={priceRef} name=\"price\" type=\"text\" className=\"form-control\" id=\"price\" />\r\n          {errors.price && <span className=\"text-danger\">Enter valid price higer than 0</span>}\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"image\" className=\"form-label\">Image:</label>\r\n          <input defaultValue=\"http://\" ref={imageRef} name=\"img\" type=\"text\" className=\"form-control\" id=\"image\" />\r\n          {errors.img && <span className=\"text-danger\">Enter valid image higer than 0</span>}\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"qty\" className=\"form-label\">QTY:</label>\r\n          <input defaultValue=\"4\" ref={qtyRef} name=\"qty\" type=\"number\" className=\"form-control\" id=\"qty\" />\r\n          {errors.qty && <span className=\"text-danger\">Enter valid qty higer than 0</span>}\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"comments\" className=\"form-label\">Comments:</label>\r\n          <input defaultValue=\"bla bla 222\" ref={commentsRef} name=\"comments\" type=\"text\" className=\"form-control\" id=\"comments\" />\r\n          {errors.comments && <span className=\"text-danger\">Enter valid comments</span>}\r\n        </div>\r\n\r\n\r\n\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"category\" className=\"form-label\">Category</label>\r\n          <select ref={catRef} name=\"category_s_id\" id=\"category\" className=\"form-select\" >\r\n            {cat_ar.map(item => {\r\n              return(\r\n                <option key={item.s_id} value={item.s_id}>\r\n                  {item.name}\r\n                </option>\r\n              )\r\n            })}\r\n          </select>\r\n        {errors.category_s_id && <span className=\"text-danger\">There is problem, please wait... or click refresh</span>}\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary\">Add product</button>\r\n\r\n\r\n      </form>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AddProd","D:\\studi\\ofer\\p_4\\react\\src\\marketComps\\admin\\add\\addUser.js",["100","101","102"],"\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport {  doApiMethod, URL_API } from '../../../services/apiSer'\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction AddUser(props) {\r\n\r\n  let history = useHistory()\r\n  const { register, handleSubmit, errors } = useForm();\r\n  let nameRef = register({ required: true, minLength:2,maxLength:100 });\r\n  let emailRef = register({ required: true, pattern: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i });\r\n  let passRef = register({ required: true, minLength: 3 })\r\n  let phoneRef = register({ required: true, minLength: 7 });\r\n  let addressRef = register({});\r\n\r\n  \r\n\r\n  // name:Joi.string().min(2).max(100).required(),\r\n  // email:Joi.string().min(2).max(100).email().required(),\r\n  // pass:Joi.string().min(2).max(100).required(),\r\n  // phone:Joi.string().min(9).max(20).required(),\r\n  // address:Joi.string().min(2).max(200).allow(null, ''),\r\n  // avatarImg:Joi.string().min(2).max(200).allow(null, ''),\r\n\r\n\r\n  const onFormSub = (dataBody) => {\r\n    console.log(dataBody);\r\n    \r\n    // doApi(dataBody)\r\n    doApi(dataBody);\r\n  }\r\n\r\n  const doApi = async(dataBody) => {\r\n    let url = URL_API + \"/users/\" ;\r\n    let data = await doApiMethod(url,\"POST\",dataBody);\r\nconsole.log(data);\r\n    if(data._id){\r\n      alert(\"the user added\");\r\n      history.push(\"/admin/users\");\r\n    }\r\n    else{\r\n      alert(\"the email is alredy exssit\");\r\n    }\r\n  }\r\n\r\n  // 15:02\r\n\r\n  return (\r\n    <div className=\"container\">\r\n  \r\n      <form onSubmit={handleSubmit(onFormSub)} className=\"col-lg-6 mx-auto p-2 shadow mt-3\">\r\n        <h1>Add new Product</h1>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"name\" className=\"form-label\">name</label>\r\n          <input defaultValue=\"\" ref={nameRef} name=\"name\" type=\"text\" className=\"form-control\" id=\"name\" />\r\n          {errors.name && <span className=\"text-danger\">Enter vaild name (at least 2 charts)</span>}\r\n        </div>\r\n\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"email\" className=\"form-label\">email</label>\r\n          <input defaultValue=\" \" ref={emailRef} name=\"email\" type=\"text\" className=\"form-control\" id=\"email\" />\r\n          {errors.email && <span className=\"text-danger\">Enter email (at least 2 charts)</span>}\r\n        </div>\r\n\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"pass\" className=\"form-label\">password:</label>\r\n          <input defaultValue=\"123\" ref={passRef} name=\"pass\" type=\"text\" className=\"form-control\" id=\"pass\" />\r\n          {errors.pass && <span className=\"text-danger\">Enter valid password higer than 0</span>}\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"phone\" className=\"form-label\">phone:</label>\r\n          <input defaultValue=\"\" ref={phoneRef} name=\"phone\" type=\"text\" className=\"form-control\" id=\"phone\" />\r\n          {errors.phone && <span className=\"text-danger\">Enter valid phone higer than 0</span>}\r\n          </div>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"address\" className=\"form-label\">address:</label>\r\n          <input defaultValue=\"\" ref={addressRef} name=\"address\" type=\"text\" className=\"form-control\" id=\"address\" />\r\n          {errors.address && <span className=\"text-danger\">Enter valid address higer than 0</span>}\r\n          </div>\r\n\r\n        <button type=\"submit\" className=\"btn btn-primary\">Add product</button>\r\n\r\n\r\n      </form>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AddUser","D:\\studi\\ofer\\p_4\\react\\src\\marketComps\\admin\\add\\addCat.js",["103"],"import React from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport {  doApiMethod, URL_API } from '../../../services/apiSer'\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nfunction AddCat(props) {\r\n\r\n\r\n  let history = useHistory()\r\n  const { register, handleSubmit, errors } = useForm();\r\n\r\n  let nameRef = register({ required: true, minLength: 3 });\r\n  let infoRef = register({ required: true, minLength: 3 });\r\n  let idRef = register({ required: true, min: 1 });\r\n\r\n  const onFormSub = (dataBody) => {\r\n    console.log(dataBody);\r\n    \r\n    // doApi(dataBody)\r\n    doApi(dataBody);\r\n  }\r\n\r\n  const doApi = async(dataBody) => {\r\n    let url = URL_API + \"/categories\";\r\n    let data = await doApiMethod(url,\"POST\",dataBody);\r\n    // if succed we will get _id prop\r\n    // console.log(data);\r\n    if(data._id){\r\n      alert(\"category added\");\r\n      history.push(\"/admin/category\");\r\n    }\r\n    else{\r\n      alert(\"There is problem choose another short id\");\r\n    }\r\n  }\r\n\r\n  // 15:02\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <form onSubmit={handleSubmit(onFormSub)} className=\"col-lg-6 mx-auto p-2 shadow mt-3\">\r\n        <h1>Add new Category</h1>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"name\" className=\"form-label\">name</label>\r\n          <input defaultValue=\"\" ref={nameRef} name=\"name\" type=\"text\" className=\"form-control\" id=\"name\" />\r\n          {errors.name && <span className=\"text-danger\">Enter vaild name (at least 2 charts)</span>}\r\n        </div>\r\n\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"info\" className=\"form-label\">info</label>\r\n          <input defaultValue=\"\" ref={infoRef} name=\"info\" type=\"text\" className=\"form-control\" id=\"info\" />\r\n          {errors.info && <span className=\"text-danger\">Enter info (at least 2 charts)</span>}\r\n        </div>\r\n\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"s_id\" className=\"form-label\">short id (choose something not in use):</label>\r\n          <input defaultValue=\"7\" ref={idRef} name=\"s_id\" type=\"text\" className=\"form-control\" id=\"s_id\" />\r\n          {errors.s_id && <span className=\"text-danger\">Enter valid short id higer than 0</span>}\r\n        </div>\r\n       \r\n        <button type=\"submit\" className=\"btn btn-primary\">Add product</button>\r\n\r\n\r\n      </form>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AddCat","D:\\studi\\ofer\\p_4\\react\\src\\marketComps\\admin\\edit\\edittUser.js",["104","105","106"],"\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport {  doApiMethod, URL_API } from '../../../services/apiSer';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction EditUser(props) {\r\n\r\n  let history = useHistory()\r\n  const { register, handleSubmit, errors } = useForm();\r\n  let editid = props.match.params.editId;\r\n  let nameRef = register({ });\r\n  let addressRef = register({  });\r\n  let avatarImgRef = register({ });\r\n  let phoneRef = register({});\r\n\r\n\r\n \r\n\r\n\r\n\r\n\r\n  const onFormSub = (dataBody) => {\r\n    console.log(dataBody);\r\n        doApi(dataBody);\r\n  }\r\n\r\n  const doApi = async(dataBody) => {\r\n    let url = URL_API + \"/users/\" + editid;\r\n    let data = await doApiMethod(url,\"PUT\",dataBody);\r\n\r\n    if(data.n === 1){\r\n      alert(\"the user update\");\r\n      history.push(\"/admin/users\");\r\n    }\r\n    else{\r\n      alert(\"There is problem try again later\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n  \r\n      <form onSubmit={handleSubmit(onFormSub)} className=\"col-lg-6 mx-auto p-2 shadow mt-3\">\r\n        <h1>edit that user</h1>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"name\" className=\"form-label\">name</label>\r\n          <input defaultValue=\"\" ref={nameRef} name=\"name\" type=\"text\" className=\"form-control\" id=\"name\" />\r\n          {errors.name && <span className=\"text-danger\">Enter vaild name (at least 2 charts)</span>}\r\n        </div>\r\n\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"address\" className=\"form-label\">address</label>\r\n          <input defaultValue=\" \" ref={addressRef} name=\"address\" type=\"text\" className=\"form-control\" id=\"address\" />\r\n          {errors.address && <span className=\"text-danger\">Enter address (at least 2 charts)</span>}\r\n        </div>\r\n\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"avatarImg\" className=\"form-label\">avatarImg:</label>\r\n          <input defaultValue=\"123\" ref={avatarImgRef} name=\"avatarImg\" type=\"text\" className=\"form-control\" id=\"avatarImg\" />\r\n          {errors.avatarImg && <span className=\"text-danger\">Enter valid avatarImgword higer than 0</span>}\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"phone\" className=\"form-label\">phone:</label>\r\n          <input defaultValue=\"\" ref={phoneRef} name=\"img\" type=\"text\" className=\"form-control\" id=\"phone\" />\r\n          {errors.img && <span className=\"text-danger\">Enter valid phone higer than 0</span>}\r\n          </div>\r\n\r\n        <button type=\"submit\" className=\"btn btn-primary\">edit the user</button>\r\n\r\n\r\n      </form>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EditUser","D:\\studi\\ofer\\p_4\\react\\src\\marketComps\\admin\\edit\\editProd.js",["107","108","109"],"import React, { useEffect, useState } from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { doApiGet, doApiMethod, URL_API } from '../../../services/apiSer';\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nfunction EditProd(props) {\r\n  let history = useHistory()\r\n\r\n  let editid = props.match.params.editId;\r\n  const { register, handleSubmit, errors } = useForm();\r\n  let nameRef = register({ required: true, minLength: 3 });\r\n  let infoRef = register({ required: true, minLength: 3 });\r\n  let priceRef = register({ required: true, min: 1 });\r\n  let imgRef = register({});\r\n  let qtyRef = register({ required: true, min: 1 });\r\n  let commentsRef = register({ minLength: 1 });\r\n  let category_s_idRef = register({ required: true });\r\n\r\n\r\n\r\n\r\n\r\n  let [cat_ar, setcatAr] = useState([]);\r\n\r\n  useEffect(() => {\r\n    doApi();\r\n  }, [])\r\n\r\n  const doApi = async () => {\r\n    let url = URL_API + \"/categories\";\r\n    let data = await doApiGet(url);\r\n    setcatAr(data);\r\n  }\r\n\r\n\r\n  const onFormSub = (dataBody) => {\r\n    console.log(dataBody);\r\n    \r\n    editprod(dataBody)\r\n  }\r\n\r\n  const editprod = async(dataBody) => {\r\n \r\n    let url = URL_API+\"/prods/\"+editid;\r\n    let data = await doApiMethod(url,\"PUT\",dataBody);\r\n    console.log(data);\r\n    if(data.n == 1){\r\n      alert(\"the prod updated\");\r\n \r\n      history.push(\"/admin/list\");\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"container \">\r\n\r\n      <div className=\"container\">\r\n      <form onSubmit={handleSubmit(onFormSub)} className=\"col-lg-6 mx-auto p-2 shadow mt-3\">\r\n        <h1>Add new Product</h1>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"name\" className=\"form-label\">name</label>\r\n          <input defaultValue=\"pizza\" ref={nameRef} name=\"name\" type=\"text\" className=\"form-control\" id=\"name\" />\r\n          {errors.name && <span className=\"text-danger\">Enter vaild name (at least 2 charts)</span>}\r\n        </div>\r\n\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"info\" className=\"form-label\">info</label>\r\n          <input defaultValue=\"bla bla\" ref={infoRef} name=\"info\" type=\"text\" className=\"form-control\" id=\"info\" />\r\n          {errors.info && <span className=\"text-danger\">Enter info (at least 2 charts)</span>}\r\n        </div>\r\n\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"price\" className=\"form-label\">Price:</label>\r\n          <input defaultValue=\"5\" ref={priceRef} name=\"price\" type=\"text\" className=\"form-control\" id=\"price\" />\r\n          {errors.price && <span className=\"text-danger\">Enter valid price higer than 0</span>}\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"img\" className=\"form-label\">img:</label>\r\n          <input defaultValue=\"http://\" ref={imgRef} name=\"img\" type=\"text\" className=\"form-control\" id=\"img\" />\r\n          {errors.img && <span className=\"text-danger\">Enter valid img higer than 0</span>}\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"qty\" className=\"form-label\">QTY:</label>\r\n          <input defaultValue=\"4\" ref={qtyRef} name=\"qty\" type=\"number\" className=\"form-control\" id=\"qty\" />\r\n          {errors.qty && <span className=\"text-danger\">Enter valid qty higer than 0</span>}\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"comments\" className=\"form-label\">Comments:</label>\r\n          <input defaultValue=\"bla bla 222\" ref={commentsRef} name=\"comments\" type=\"text\" className=\"form-control\" id=\"comments\" />\r\n          {errors.comments && <span className=\"text-danger\">Enter valid comments</span>}\r\n        </div>\r\n       \r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"category_s_id\" className=\"form-label\">category_s_id:</label>\r\n          <input defaultValue=\"bla bla 222\" ref={category_s_idRef} name=\"category_s_id\" type=\"number\" className=\"form-control\" id=\"category_s_id\" />\r\n          {errors.category_s_id && <span className=\"text-danger\">Enter valid category_s_id</span>}\r\n        </div>\r\n\r\n\r\n        \r\n   \r\n    \r\n        <button type=\"submit\" className=\"btn btn-primary\">edit that prod</button>\r\n\r\n\r\n      </form>\r\n  \r\n    </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EditProd","D:\\studi\\ofer\\p_4\\react\\src\\marketComps\\admin\\edit\\editCat.js",["110","111","112","113"],"import React, { useEffect, useState } from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport {  doApiMethod, URL_API } from '../../../services/apiSer';\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nfunction Editcat(props) {\r\n  let history = useHistory()\r\n\r\n  let editid = props.match.params.editId;\r\n  const { register, handleSubmit, errors } = useForm();\r\n\r\n  let nameRef = register({ required: true, minLength: 3 });\r\n  let infoRef = register({ required: true, minLength: 3 });\r\n  let idRef = register({ required: true, min: 1 });\r\n\r\n\r\n\r\n  const onFormSub = (dataBody) => {\r\n    console.log(dataBody);\r\n    \r\n    editprod(dataBody)\r\n  }\r\n\r\n  const editprod = async(dataBody) => {\r\n \r\n    let url = URL_API+\"/categories/\"+editid;\r\n    let data = await doApiMethod(url,\"PUT\",dataBody);\r\n    console.log(data);\r\n    if(data.n == 1){\r\n      alert(\"the category updated\");\r\n \r\n      history.push(\"/admin/category\");\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"container\">\r\n      <form onSubmit={handleSubmit(onFormSub)} className=\"col-lg-6 mx-auto p-2 shadow mt-3\">\r\n        <h1>Add new Category</h1>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"name\" className=\"form-label\">name</label>\r\n          <input defaultValue=\"\" ref={nameRef} name=\"name\" type=\"text\" className=\"form-control\" id=\"name\" />\r\n          {errors.name && <span className=\"text-danger\">Enter vaild name (at least 2 charts)</span>}\r\n        </div>\r\n\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"info\" className=\"form-label\">info</label>\r\n          <input defaultValue=\"\" ref={infoRef} name=\"info\" type=\"text\" className=\"form-control\" id=\"info\" />\r\n          {errors.info && <span className=\"text-danger\">Enter info (at least 2 charts)</span>}\r\n        </div>\r\n\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"s_id\" className=\"form-label\">short id (choose something not in use):</label>\r\n          <input defaultValue=\"7\" ref={idRef} name=\"s_id\" type=\"text\" className=\"form-control\" id=\"s_id\" />\r\n          {errors.s_id && <span className=\"text-danger\">Enter valid short id higer than 0</span>}\r\n        </div>\r\n       \r\n        <button type=\"submit\" className=\"btn btn-primary\">Add product</button>\r\n\r\n\r\n      </form>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Editcat",{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","severity":1,"message":"119","line":1,"column":8,"nodeType":"120","messageId":"121","endLine":1,"endColumn":12},{"ruleId":"118","severity":1,"message":"122","line":2,"column":27,"nodeType":"120","messageId":"121","endLine":2,"endColumn":33},{"ruleId":"123","severity":1,"message":"124","line":22,"column":17,"nodeType":"125","messageId":"126","endLine":22,"endColumn":19},{"ruleId":"127","severity":1,"message":"128","line":18,"column":5,"nodeType":"129","endLine":18,"endColumn":18,"suggestions":"130"},{"ruleId":"123","severity":1,"message":"131","line":24,"column":18,"nodeType":"125","messageId":"126","endLine":24,"endColumn":20},{"ruleId":"123","severity":1,"message":"124","line":22,"column":17,"nodeType":"125","messageId":"126","endLine":22,"endColumn":19},{"ruleId":"118","severity":1,"message":"132","line":1,"column":28,"nodeType":"120","messageId":"121","endLine":1,"endColumn":34},{"ruleId":"118","severity":1,"message":"133","line":4,"column":10,"nodeType":"120","messageId":"121","endLine":4,"endColumn":14},{"ruleId":"118","severity":1,"message":"134","line":2,"column":17,"nodeType":"120","messageId":"121","endLine":2,"endColumn":26},{"ruleId":"118","severity":1,"message":"132","line":2,"column":28,"nodeType":"120","messageId":"121","endLine":2,"endColumn":34},{"ruleId":"118","severity":1,"message":"135","line":2,"column":36,"nodeType":"120","messageId":"121","endLine":2,"endColumn":44},{"ruleId":"118","severity":1,"message":"133","line":4,"column":10,"nodeType":"120","messageId":"121","endLine":4,"endColumn":14},{"ruleId":"118","severity":1,"message":"134","line":2,"column":17,"nodeType":"120","messageId":"121","endLine":2,"endColumn":26},{"ruleId":"118","severity":1,"message":"132","line":2,"column":28,"nodeType":"120","messageId":"121","endLine":2,"endColumn":34},{"ruleId":"118","severity":1,"message":"135","line":2,"column":36,"nodeType":"120","messageId":"121","endLine":2,"endColumn":44},{"ruleId":"118","severity":1,"message":"133","line":4,"column":10,"nodeType":"120","messageId":"121","endLine":4,"endColumn":14},{"ruleId":"118","severity":1,"message":"136","line":23,"column":8,"nodeType":"120","messageId":"121","endLine":23,"endColumn":14},{"ruleId":"123","severity":1,"message":"124","line":47,"column":15,"nodeType":"125","messageId":"126","endLine":47,"endColumn":17},{"ruleId":"118","severity":1,"message":"134","line":1,"column":17,"nodeType":"120","messageId":"121","endLine":1,"endColumn":26},{"ruleId":"118","severity":1,"message":"135","line":1,"column":28,"nodeType":"120","messageId":"121","endLine":1,"endColumn":36},{"ruleId":"118","severity":1,"message":"133","line":4,"column":10,"nodeType":"120","messageId":"121","endLine":4,"endColumn":14},{"ruleId":"123","severity":1,"message":"124","line":29,"column":15,"nodeType":"125","messageId":"126","endLine":29,"endColumn":17},"no-native-reassign",["137"],"no-negated-in-lhs",["138"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Router' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'doApi' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["139"],"Expected '!==' and instead saw '!='.","'useRef' is defined but never used.","'Link' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'cat_ar' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"140","fix":"141"},"Update the dependencies array to be: [doApi, history, props.match]",{"range":"142","text":"143"},[437,450],"[doApi, history, props.match]"]
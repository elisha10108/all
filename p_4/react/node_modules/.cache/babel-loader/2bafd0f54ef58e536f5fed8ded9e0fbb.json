{"ast":null,"code":"var _jsxFileName = \"D:\\\\studi\\\\ofer\\\\l47\\\\react\\\\src\\\\marketComps\\\\admin\\\\authAdmin.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useHistory } from 'react-router';\nimport { doApiMethod, URL_API } from '../../services/apiSer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AuthAdmin(props) {\n  _s();\n\n  let history = useHistory();\n  useEffect(() => {\n    console.log(\"auth log\"); // check if there token\n    //TODO: check if already in /admin\n\n    if (!localStorage[\"tok\"]) {\n      history.push(\"/admin\");\n    } else {\n      doApi();\n    }\n  }, [props.match]);\n\n  const doApi = async () => {\n    let url = URL_API + \"/users/checkAdmin\";\n    let data = await doApiMethod(url, \"POST\", {}); // check if the token is valid and the user is admin\n\n    if (data.auth != \"success\") {\n      localStorage.removeItem(\"tok\");\n      history.push(\"/admin\"); // 13:10\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AuthAdmin, \"bz2N+u0mX89LO9zOCfVCA9Sa20M=\", false, function () {\n  return [useHistory];\n});\n\n_c = AuthAdmin;\nexport default AuthAdmin;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthAdmin\");","map":{"version":3,"sources":["D:/studi/ofer/l47/react/src/marketComps/admin/authAdmin.js"],"names":["React","useEffect","useHistory","doApiMethod","URL_API","AuthAdmin","props","history","console","log","localStorage","push","doApi","match","url","data","auth","removeItem"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,WAAT,EAAsBC,OAAtB,QAAqC,uBAArC;;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAAyB;AAAA;;AACvB,MAAIC,OAAO,GAAGL,UAAU,EAAxB;AAEAD,EAAAA,SAAS,CAAC,MAAK;AACbO,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EADa,CAEb;AACA;;AACA,QAAG,CAACC,YAAY,CAAC,KAAD,CAAhB,EAAwB;AACtBH,MAAAA,OAAO,CAACI,IAAR,CAAa,QAAb;AACD,KAFD,MAGI;AACFC,MAAAA,KAAK;AACN;AACF,GAVQ,EAUP,CAACN,KAAK,CAACO,KAAP,CAVO,CAAT;;AAYA,QAAMD,KAAK,GAAG,YAAW;AACvB,QAAIE,GAAG,GAAGV,OAAO,GAAC,mBAAlB;AACA,QAAIW,IAAI,GAAG,MAAMZ,WAAW,CAACW,GAAD,EAAK,MAAL,EAAY,EAAZ,CAA5B,CAFuB,CAGvB;;AACA,QAAGC,IAAI,CAACC,IAAL,IAAa,SAAhB,EAA0B;AACxBN,MAAAA,YAAY,CAACO,UAAb,CAAwB,KAAxB;AACAV,MAAAA,OAAO,CAACI,IAAR,CAAa,QAAb,EAFwB,CAG9B;AACK;AACF,GATD;;AAWA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA,UADF;AAID;;GA9BQN,S;UACOH,U;;;KADPG,S;AAgCT,eAAeA,SAAf","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport { doApiMethod, URL_API } from '../../services/apiSer';\r\n\r\nfunction AuthAdmin(props){\r\n  let history = useHistory()\r\n\r\n  useEffect(()=> {\r\n    console.log(\"auth log\")\r\n    // check if there token\r\n    //TODO: check if already in /admin\r\n    if(!localStorage[\"tok\"]){\r\n      history.push(\"/admin\");\r\n    }\r\n    else{\r\n      doApi();\r\n    }\r\n  },[props.match])\r\n\r\n  const doApi = async() => {\r\n    let url = URL_API+\"/users/checkAdmin\";\r\n    let data = await doApiMethod(url,\"POST\",{});\r\n    // check if the token is valid and the user is admin\r\n    if(data.auth != \"success\"){\r\n      localStorage.removeItem(\"tok\");\r\n      history.push(\"/admin\");\r\n// 13:10\r\n    }\r\n  }\r\n\r\n  return(\r\n    <React.Fragment>\r\n    </React.Fragment> \r\n  )\r\n}\r\n\r\nexport default AuthAdmin"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\studi\\\\ofer\\\\p_4\\\\react\\\\src\\\\marketComps\\\\admin\\\\edit\\\\editCat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useForm } from \"react-hook-form\";\nimport { doApiMethod, URL_API } from '../../../services/apiSer';\nimport { Link, useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Editcat(props) {\n  _s();\n\n  let history = useHistory();\n  let editid = props.match.params.editId;\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n  let nameRef = register({\n    required: true,\n    minLength: 3\n  });\n  let infoRef = register({\n    required: true,\n    minLength: 3\n  });\n  let idRef = register({\n    required: true,\n    min: 1\n  });\n\n  const onFormSub = dataBody => {\n    console.log(dataBody);\n    editprod(dataBody);\n  };\n\n  const editprod = async dataBody => {\n    let url = URL_API + \"/categories/\" + editid;\n    let data = await doApiMethod(url, \"PUT\", dataBody);\n    console.log(data);\n\n    if (data.n == 1) {\n      alert(\"the category updated\");\n      history.push(\"/admin/category\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onFormSub),\n      className: \"col-lg-6 mx-auto p-2 shadow mt-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Add new Category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          className: \"form-label\",\n          children: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          defaultValue: \"\",\n          ref: nameRef,\n          name: \"name\",\n          type: \"text\",\n          className: \"form-control\",\n          id: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), errors.name && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-danger\",\n          children: \"Enter vaild name (at least 2 charts)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"info\",\n          className: \"form-label\",\n          children: \"info\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          defaultValue: \"\",\n          ref: infoRef,\n          name: \"info\",\n          type: \"text\",\n          className: \"form-control\",\n          id: \"info\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), errors.info && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-danger\",\n          children: \"Enter info (at least 2 charts)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"s_id\",\n          className: \"form-label\",\n          children: \"short id (choose something not in use):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          defaultValue: \"7\",\n          ref: idRef,\n          name: \"s_id\",\n          type: \"text\",\n          className: \"form-control\",\n          id: \"s_id\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), errors.s_id && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-danger\",\n          children: \"Enter valid short id higer than 0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        children: \"Add product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Editcat, \"7ng0GsTxSTXaNCxOCHjEZjY8F0M=\", false, function () {\n  return [useHistory, useForm];\n});\n\n_c = Editcat;\nexport default Editcat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Editcat\");","map":{"version":3,"sources":["D:/studi/ofer/p_4/react/src/marketComps/admin/edit/editCat.js"],"names":["React","useEffect","useState","useForm","doApiMethod","URL_API","Link","useHistory","Editcat","props","history","editid","match","params","editId","register","handleSubmit","errors","nameRef","required","minLength","infoRef","idRef","min","onFormSub","dataBody","console","log","editprod","url","data","n","alert","push","name","info","s_id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAAUC,WAAV,EAAuBC,OAAvB,QAAsC,0BAAtC;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,kBAAjC;;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA;;AACtB,MAAIC,OAAO,GAAGH,UAAU,EAAxB;AAEA,MAAII,MAAM,GAAGF,KAAK,CAACG,KAAN,CAAYC,MAAZ,CAAmBC,MAAhC;AACA,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA;AAA1B,MAAqCd,OAAO,EAAlD;AAEA,MAAIe,OAAO,GAAGH,QAAQ,CAAC;AAAEI,IAAAA,QAAQ,EAAE,IAAZ;AAAkBC,IAAAA,SAAS,EAAE;AAA7B,GAAD,CAAtB;AACA,MAAIC,OAAO,GAAGN,QAAQ,CAAC;AAAEI,IAAAA,QAAQ,EAAE,IAAZ;AAAkBC,IAAAA,SAAS,EAAE;AAA7B,GAAD,CAAtB;AACA,MAAIE,KAAK,GAAGP,QAAQ,CAAC;AAAEI,IAAAA,QAAQ,EAAE,IAAZ;AAAkBI,IAAAA,GAAG,EAAE;AAAvB,GAAD,CAApB;;AAIA,QAAMC,SAAS,GAAIC,QAAD,IAAc;AAC9BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AAEAG,IAAAA,QAAQ,CAACH,QAAD,CAAR;AACD,GAJD;;AAMA,QAAMG,QAAQ,GAAG,MAAMH,QAAN,IAAmB;AAElC,QAAII,GAAG,GAAGxB,OAAO,GAAC,cAAR,GAAuBM,MAAjC;AACA,QAAImB,IAAI,GAAG,MAAM1B,WAAW,CAACyB,GAAD,EAAK,KAAL,EAAWJ,QAAX,CAA5B;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYG,IAAZ;;AACA,QAAGA,IAAI,CAACC,CAAL,IAAU,CAAb,EAAe;AACbC,MAAAA,KAAK,CAAC,sBAAD,CAAL;AAEAtB,MAAAA,OAAO,CAACuB,IAAR,CAAa,iBAAb;AACD;AACF,GAVD;;AAWA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,2BACE;AAAM,MAAA,QAAQ,EAAEjB,YAAY,CAACQ,SAAD,CAA5B;AAAyC,MAAA,SAAS,EAAC,kCAAnD;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,MAAf;AAAsB,UAAA,SAAS,EAAC,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAO,UAAA,YAAY,EAAC,EAApB;AAAuB,UAAA,GAAG,EAAEN,OAA5B;AAAqC,UAAA,IAAI,EAAC,MAA1C;AAAiD,UAAA,IAAI,EAAC,MAAtD;AAA6D,UAAA,SAAS,EAAC,cAAvE;AAAsF,UAAA,EAAE,EAAC;AAAzF;AAAA;AAAA;AAAA;AAAA,gBAFF,EAGGD,MAAM,CAACiB,IAAP,iBAAe;AAAM,UAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHlB;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAQE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,MAAf;AAAsB,UAAA,SAAS,EAAC,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAO,UAAA,YAAY,EAAC,EAApB;AAAuB,UAAA,GAAG,EAAEb,OAA5B;AAAqC,UAAA,IAAI,EAAC,MAA1C;AAAiD,UAAA,IAAI,EAAC,MAAtD;AAA6D,UAAA,SAAS,EAAC,cAAvE;AAAsF,UAAA,EAAE,EAAC;AAAzF;AAAA;AAAA;AAAA;AAAA,gBAFF,EAGGJ,MAAM,CAACkB,IAAP,iBAAe;AAAM,UAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHlB;AAAA;AAAA;AAAA;AAAA;AAAA,cARF,eAcE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,MAAf;AAAsB,UAAA,SAAS,EAAC,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAO,UAAA,YAAY,EAAC,GAApB;AAAwB,UAAA,GAAG,EAAEb,KAA7B;AAAoC,UAAA,IAAI,EAAC,MAAzC;AAAgD,UAAA,IAAI,EAAC,MAArD;AAA4D,UAAA,SAAS,EAAC,cAAtE;AAAqF,UAAA,EAAE,EAAC;AAAxF;AAAA;AAAA;AAAA;AAAA,gBAFF,EAGGL,MAAM,CAACmB,IAAP,iBAAe;AAAM,UAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHlB;AAAA;AAAA;AAAA;AAAA;AAAA,cAdF,eAoBE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,iBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cApBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD;;GA1DQ5B,O;UACOD,U,EAG6BJ,O;;;KAJpCK,O;AA4DT,eAAeA,OAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport {  doApiMethod, URL_API } from '../../../services/apiSer';\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nfunction Editcat(props) {\r\n  let history = useHistory()\r\n\r\n  let editid = props.match.params.editId;\r\n  const { register, handleSubmit, errors } = useForm();\r\n\r\n  let nameRef = register({ required: true, minLength: 3 });\r\n  let infoRef = register({ required: true, minLength: 3 });\r\n  let idRef = register({ required: true, min: 1 });\r\n\r\n\r\n\r\n  const onFormSub = (dataBody) => {\r\n    console.log(dataBody);\r\n    \r\n    editprod(dataBody)\r\n  }\r\n\r\n  const editprod = async(dataBody) => {\r\n \r\n    let url = URL_API+\"/categories/\"+editid;\r\n    let data = await doApiMethod(url,\"PUT\",dataBody);\r\n    console.log(data);\r\n    if(data.n == 1){\r\n      alert(\"the category updated\");\r\n \r\n      history.push(\"/admin/category\");\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"container\">\r\n      <form onSubmit={handleSubmit(onFormSub)} className=\"col-lg-6 mx-auto p-2 shadow mt-3\">\r\n        <h1>Add new Category</h1>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"name\" className=\"form-label\">name</label>\r\n          <input defaultValue=\"\" ref={nameRef} name=\"name\" type=\"text\" className=\"form-control\" id=\"name\" />\r\n          {errors.name && <span className=\"text-danger\">Enter vaild name (at least 2 charts)</span>}\r\n        </div>\r\n\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"info\" className=\"form-label\">info</label>\r\n          <input defaultValue=\"\" ref={infoRef} name=\"info\" type=\"text\" className=\"form-control\" id=\"info\" />\r\n          {errors.info && <span className=\"text-danger\">Enter info (at least 2 charts)</span>}\r\n        </div>\r\n\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"s_id\" className=\"form-label\">short id (choose something not in use):</label>\r\n          <input defaultValue=\"7\" ref={idRef} name=\"s_id\" type=\"text\" className=\"form-control\" id=\"s_id\" />\r\n          {errors.s_id && <span className=\"text-danger\">Enter valid short id higer than 0</span>}\r\n        </div>\r\n       \r\n        <button type=\"submit\" className=\"btn btn-primary\">Add product</button>\r\n\r\n\r\n      </form>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Editcat"]},"metadata":{},"sourceType":"module"}
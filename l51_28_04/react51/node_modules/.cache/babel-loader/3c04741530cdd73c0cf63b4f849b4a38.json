{"ast":null,"code":"var _jsxFileName = \"D:\\\\studi\\\\ofer\\\\l51_28_04\\\\react51\\\\src\\\\marketComps\\\\misc\\\\pagesNav.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { doApiGet, URL_API } from '../../services/apiSer';\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PageNav(props) {\n  _s();\n\n  // address of the api request for get the amount of items total\n  let urlPageApi = props.urlPageApi; // how much item we want to show per page to know how much pages btn to show\n\n  let perPage = props.perPage; // the pages btn link in the client url\n\n  let pageLinkStart = props.pageLinkStart; //\"/admin/list/\"\n  // css className for style the btn of pages\n\n  let btnclassName = props.btnclassName ? props.btnclassName : \"btn btn-dark ms-1\";\n  className;\n  let [pages, setPages] = useState(0);\n  let [pageNow, setPageNow] = useState(0);\n  useEffect(() => {\n    doApi();\n  }, []);\n\n  const doApi = async () => {\n    console.log(urlPageApi);\n    let data = await doApiGet(URL_API + urlPageApi);\n    console.log(data);\n    setPages(Math.ceil(data.count / perPage));\n  };\n\n  const handleClick = e => {\n    console.log(e);\n    setPageNow(e.eventPhase);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Page:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n      \"aria-label\": \"Page navigation example\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        classNameName: \"pagination\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          classNameName: \"page-item\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: pageNow - 1,\n            classNameName: \"page-link\",\n            \"aria-label\": \"Previous\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              \"aria-hidden\": \"true\",\n              children: \"\\xAB\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              classNameName: \"sr-only\",\n              children: \"Previous\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 5\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 5\n        }, this), [...Array(pages)].map((item, i) => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            classNameName: \"page-item active\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              onClick: e => handleClick(e),\n              to: pageLinkStart + i,\n              classNameName: \"page-link\",\n              children: i + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 5\n            }, this)\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 10\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"li\", {\n          classNameName: \"page-item\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            classNameName: \"page-link\",\n            href: pageNow + 1,\n            \"aria-label\": \"Next\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              \"aria-hidden\": \"true\",\n              children: \"\\xBB\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              classNameName: \"sr-only\",\n              children: \"Next\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PageNav, \"hkLrPNy0SvpEoTAWHosiDY0qkZk=\");\n\n_c = PageNav;\nexport default PageNav;\n\nvar _c;\n\n$RefreshReg$(_c, \"PageNav\");","map":{"version":3,"sources":["D:/studi/ofer/l51_28_04/react51/src/marketComps/misc/pagesNav.js"],"names":["React","useEffect","useState","doApiGet","URL_API","Link","PageNav","props","urlPageApi","perPage","pageLinkStart","btnclassName","className","pages","setPages","pageNow","setPageNow","doApi","console","log","data","Math","ceil","count","handleClick","e","eventPhase","Array","map","item","i"],"mappings":"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","sourcesContent":["\r\nimport React, { useEffect, useState } from 'react';\r\nimport { doApiGet, URL_API } from '../../services/apiSer'\r\nimport {Link} from \"react-router-dom\";\r\n\r\nfunction PageNav(props){\r\n  // address of the api request for get the amount of items total\r\n  let urlPageApi = props.urlPageApi;\r\n  // how much item we want to show per page to know how much pages btn to show\r\n  let perPage = props.perPage\r\n  // the pages btn link in the client url\r\n  let pageLinkStart = props.pageLinkStart //\"/admin/list/\"\r\n  // css className for style the btn of pages\r\n  let btnclassName = props.btnclassName ? props.btnclassName :  \"btn btn-dark ms-1\";\r\nclassName\r\n  let [pages,setPages] = useState(0)\r\n  let [pageNow,setPageNow] = useState(0)\r\n\r\n  useEffect(() => {\r\n    doApi();\r\n  },[])\r\n\r\n  const doApi = async() => {\r\n    console.log(urlPageApi)\r\n    let data = await doApiGet(URL_API+ urlPageApi);\r\n    console.log(data);\r\n     setPages(Math.ceil(data.count/perPage))\r\n  }\r\n  const handleClick=(e)=>{\r\n    console.log(e)\r\n    setPageNow(e.eventPhase)\r\n  }\r\n  return(\r\n    <div>\r\n      <span>Page:</span>\r\n\r\n<nav aria-label=\"Page navigation example\">\r\n  <ul classNameName=\"pagination\">\r\n    <li classNameName=\"page-item\">\r\n    <Link  to={pageNow-1} classNameName=\"page-link\" aria-label=\"Previous\">\r\n\r\n        <span aria-hidden=\"true\">«</span>\r\n        <span classNameName=\"sr-only\">Previous</span>\r\n    </Link>\r\n    \r\n     \r\n    </li>\r\n    \r\n    {[...Array(pages)].map((item,i) => {\r\n       return(\r\n         <li key={i} classNameName=\"page-item active\">\r\n    <Link onClick={(e)=>handleClick(e)}  to={pageLinkStart+i} classNameName=\"page-link\">{i+1}</Link>\r\n  </li>\r\n       \r\n       )\r\n      })}\r\n      \r\n    <li classNameName=\"page-item\">\r\n      <a classNameName=\"page-link\" href={pageNow+1} aria-label=\"Next\">\r\n        <span aria-hidden=\"true\">»</span>\r\n        <span classNameName=\"sr-only\">Next</span>\r\n      </a>\r\n    </li>\r\n  </ul>\r\n</nav>\r\n    </div> \r\n  )\r\n}\r\n\r\nexport default PageNav"]},"metadata":{},"sourceType":"module"}
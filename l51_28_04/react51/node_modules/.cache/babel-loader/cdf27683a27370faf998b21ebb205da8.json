{"ast":null,"code":"const stateInit = {\n  carts_ar: [],\n  name: \"moshe\",\n  showCart: false\n};\nexport const marketReducer = (state = stateInit, action) => {\n  switch (action.type) {\n    case \"SHOW_HIDE_CART\":\n      // saveToLocal שומר את זה בהתחלה בלוקאל ואז משגר את הסטטיט\n      return saveToLocal({ ...state,\n        showCart: action.flag\n      });\n      break;\n\n    case \"UPDATE_THE_CART\":\n      return saveToLocal(addToCart(state, action));\n      break;\n\n    default:\n      // check if there localstorage and update itself\n      return localStorage[\"market\"] ? JSON.parse(localStorage[\"market\"]) : state;\n      break;\n  }\n};\n\nconst addToCart = (state, action) => {\n  // נבדוק אם המוצר נמצא\n  // אם המוצר נמצא אנחנו פשוט נעדכן את הקאונט לקאונט שנשלח בשיגור האחרון\n  // ואם לא אנחנו נוסיף את המוצר לתוך המערך\n  // אם שקר יבצע פעולה הוספה למערך אם אמת יעדכן את הקאונט\n  let prodFound = false;\n  let temp_ar = [...state.carts_ar];\n  temp_ar.map((item, i) => {\n    if (item._id == action.item._id) {\n      item.count = action.item.count;\n      prodFound = true;\n    }\n  });\n\n  if (!prodFound) {\n    temp_ar.push(action.item);\n  }\n\n  return { ...state,\n    carts_ar: temp_ar\n  };\n};\n\nconst saveToLocal = stateTOSave => {\n  localStorage.setItem(\"market\", JSON.stringify(stateTOSave));\n  return stateTOSave;\n};","map":{"version":3,"sources":["D:/studi/ofer/l51_28_04/react51/src/reducer/marketReducer.js"],"names":["stateInit","carts_ar","name","showCart","marketReducer","state","action","type","saveToLocal","flag","addToCart","localStorage","JSON","parse","prodFound","temp_ar","map","item","i","_id","count","push","stateTOSave","setItem","stringify"],"mappings":"AAAA,MAAMA,SAAS,GAAG;AAChBC,EAAAA,QAAQ,EAAE,EADM;AAEhBC,EAAAA,IAAI,EAAE,OAFU;AAGhBC,EAAAA,QAAQ,EAAC;AAHO,CAAlB;AAOA,OAAO,MAAMC,aAAa,GAAG,CAACC,KAAK,GAAEL,SAAR,EAAoBM,MAApB,KAA+B;AAC1D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,gBAAL;AACE;AACA,aAAOC,WAAW,CAAC,EAAC,GAAGH,KAAJ;AAAWF,QAAAA,QAAQ,EAACG,MAAM,CAACG;AAA3B,OAAD,CAAlB;AACF;;AACA,SAAK,iBAAL;AACE,aAAOD,WAAW,CAACE,SAAS,CAACL,KAAD,EAAOC,MAAP,CAAV,CAAlB;AACF;;AACA;AACA;AACE,aAAQK,YAAY,CAAC,QAAD,CAAb,GAA2BC,IAAI,CAACC,KAAL,CAAWF,YAAY,CAAC,QAAD,CAAvB,CAA3B,GAAgEN,KAAvE;AACF;AAXF;AAaD,CAdM;;AAgBP,MAAMK,SAAS,GAAG,CAACL,KAAD,EAAOC,MAAP,KAAkB;AAClC;AACA;AACA;AACA;AACA,MAAIQ,SAAS,GAAG,KAAhB;AACA,MAAIC,OAAO,GAAG,CAAC,GAAGV,KAAK,CAACJ,QAAV,CAAd;AACAc,EAAAA,OAAO,CAACC,GAAR,CAAY,CAACC,IAAD,EAAQC,CAAR,KAAc;AACxB,QAAGD,IAAI,CAACE,GAAL,IAAYb,MAAM,CAACW,IAAP,CAAYE,GAA3B,EAA+B;AAC7BF,MAAAA,IAAI,CAACG,KAAL,GAAad,MAAM,CAACW,IAAP,CAAYG,KAAzB;AACAN,MAAAA,SAAS,GAAG,IAAZ;AACD;AACF,GALD;;AAMA,MAAG,CAACA,SAAJ,EAAe;AACbC,IAAAA,OAAO,CAACM,IAAR,CAAaf,MAAM,CAACW,IAApB;AACD;;AACD,SAAO,EAAC,GAAGZ,KAAJ;AAAWJ,IAAAA,QAAQ,EAACc;AAApB,GAAP;AAED,CAlBD;;AAqBA,MAAMP,WAAW,GAAIc,WAAD,IAAiB;AACnCX,EAAAA,YAAY,CAACY,OAAb,CAAqB,QAArB,EAA+BX,IAAI,CAACY,SAAL,CAAeF,WAAf,CAA/B;AACA,SAAOA,WAAP;AACD,CAHD","sourcesContent":["const stateInit = {\r\n  carts_ar: [],\r\n  name: \"moshe\",\r\n  showCart:false\r\n}\r\n\r\n\r\nexport const marketReducer = (state= stateInit , action) => {\r\n  switch (action.type){\r\n    case \"SHOW_HIDE_CART\":\r\n      // saveToLocal שומר את זה בהתחלה בלוקאל ואז משגר את הסטטיט\r\n      return saveToLocal({...state, showCart:action.flag})\r\n    break;\r\n    case \"UPDATE_THE_CART\":\r\n      return saveToLocal(addToCart(state,action));\r\n    break;\r\n    default:\r\n    // check if there localstorage and update itself\r\n      return (localStorage[\"market\"]) ? JSON.parse(localStorage[\"market\"]) : state;\r\n    break\r\n  }\r\n}\r\n\r\nconst addToCart = (state,action) => {\r\n  // נבדוק אם המוצר נמצא\r\n  // אם המוצר נמצא אנחנו פשוט נעדכן את הקאונט לקאונט שנשלח בשיגור האחרון\r\n  // ואם לא אנחנו נוסיף את המוצר לתוך המערך\r\n  // אם שקר יבצע פעולה הוספה למערך אם אמת יעדכן את הקאונט\r\n  let prodFound = false;\r\n  let temp_ar = [...state.carts_ar]\r\n  temp_ar.map((item , i) => {\r\n    if(item._id == action.item._id){\r\n      item.count = action.item.count;   \r\n      prodFound = true; \r\n    }\r\n  })\r\n  if(!prodFound) {\r\n    temp_ar.push(action.item)\r\n  }\r\n  return {...state, carts_ar:temp_ar}\r\n\r\n}\r\n\r\n\r\nconst saveToLocal = (stateTOSave) => {\r\n  localStorage.setItem(\"market\", JSON.stringify(stateTOSave));\r\n  return stateTOSave;\r\n}"]},"metadata":{},"sourceType":"module"}